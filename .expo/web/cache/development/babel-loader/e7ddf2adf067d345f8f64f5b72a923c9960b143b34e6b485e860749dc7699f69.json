{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { attendanceService } from \"../lib/api\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScanScreen() {\n  var route = useRoute();\n  var _ref = route.params || {},\n    _ref$roomId = _ref.roomId,\n    roomId = _ref$roomId === void 0 ? '' : _ref$roomId,\n    _ref$roomName = _ref.roomName,\n    roomName = _ref$roomName === void 0 ? 'Sélectionner une salle' : _ref$roomName;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isScanning = _useState4[0],\n    setIsScanning = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastScanResult = _useState6[0],\n    setLastScanResult = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    scanError = _useState8[0],\n    setScanError = _useState8[1];\n  if (!roomId) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Scanner le Code QR\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: \"Veuillez s\\xE9lectionner une salle\"\n        })]\n      })\n    });\n  }\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n        status = _yield$BarCodeScanner.status;\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n  var handleBarCodeScanned = function () {\n    var _ref4 = _asyncToGenerator(function* (_ref3) {\n      var data = _ref3.data;\n      if (!isScanning) return;\n      setIsScanning(false);\n      setLastScanResult(null);\n      setScanError(null);\n      try {\n        var studentData = JSON.parse(data);\n        if (!studentData.nom || !studentData.prenom || !studentData.codeApogee || !studentData.cne) {\n          setScanError(\"Code QR invalide: données incomplètes\");\n          return;\n        }\n        var now = new Date();\n        var record = _objectSpread(_objectSpread({}, studentData), {}, {\n          timestamp: now.toLocaleString(),\n          status: 'présent'\n        });\n        try {\n          console.log('Envoi des données à l\\'API:', _objectSpread(_objectSpread({}, studentData), {}, {\n            exam_room_id: roomId\n          }));\n          var response = yield attendanceService.markAttendanceByCode(_objectSpread(_objectSpread({}, studentData), {}, {\n            exam_room_id: roomId\n          }));\n          console.log('Réponse de l\\'API:', response.data);\n          setLastScanResult(record);\n        } catch (apiError) {\n          var _apiError$response, _apiError$response2, _apiError$response3;\n          console.error('Erreur API détaillée:', {\n            message: apiError.message,\n            response: (_apiError$response = apiError.response) == null ? void 0 : _apiError$response.data,\n            status: (_apiError$response2 = apiError.response) == null ? void 0 : _apiError$response2.status,\n            headers: (_apiError$response3 = apiError.response) == null ? void 0 : _apiError$response3.headers\n          });\n          setScanError(\"Erreur lors de l'enregistrement de la présence.\");\n        }\n      } catch (err) {\n        setScanError(\"Code QR invalide: format incorrect\");\n      }\n    });\n    return function handleBarCodeScanned(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  if (hasPermission === null) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Demande d'acc\\xE8s \\xE0 la cam\\xE9ra...\"\n      })\n    });\n  }\n  if (hasPermission === false) {\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Pas d'acc\\xE8s \\xE0 la cam\\xE9ra\"\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: \"L'application a besoin d'acc\\xE9der \\xE0 la cam\\xE9ra pour scanner les codes QR.\"\n      })]\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Scanner le Code QR\"\n        }), _jsx(Text, {\n          style: styles.subtitle,\n          children: roomName\n        })]\n      }), _jsxs(View, {\n        style: styles.scanContainer,\n        children: [isScanning ? _jsxs(View, {\n          style: styles.scannerContainer,\n          children: [_jsx(BarCodeScanner, {\n            onBarCodeScanned: handleBarCodeScanned,\n            style: styles.scanner\n          }), _jsx(View, {\n            style: styles.scanOverlay,\n            children: _jsx(View, {\n              style: styles.scanFrame\n            })\n          })]\n        }) : _jsx(View, {\n          style: styles.scanFrame,\n          children: _jsx(MaterialIcons, {\n            name: \"qr-code-scanner\",\n            size: 48,\n            color: \"#6B7280\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            return setIsScanning(!isScanning);\n          },\n          children: _jsxs(View, {\n            style: styles.buttonContent,\n            children: [_jsx(MaterialIcons, {\n              name: isScanning ? \"close\" : \"qr-code-scanner\",\n              size: 24,\n              color: \"#ffffff\",\n              style: styles.buttonIcon\n            }), _jsx(Text, {\n              style: styles.buttonText,\n              children: isScanning ? \"Arrêter le scan\" : \"Commencer le scan\"\n            })]\n          })\n        }), scanError && _jsxs(View, {\n          style: styles.errorContainer,\n          children: [_jsx(MaterialIcons, {\n            name: \"error\",\n            size: 24,\n            color: \"#EF4444\"\n          }), _jsx(Text, {\n            style: styles.errorText,\n            children: scanError\n          })]\n        }), lastScanResult && _jsxs(View, {\n          style: styles.resultContainer,\n          children: [_jsx(Text, {\n            style: styles.resultTitle,\n            children: \"Pr\\xE9sence enregistr\\xE9e\"\n          }), _jsxs(Text, {\n            style: styles.resultText,\n            children: [lastScanResult.prenom, \" \", lastScanResult.nom]\n          }), _jsxs(Text, {\n            style: styles.resultText,\n            children: [\"Code Apog\\xE9e: \", lastScanResult.codeApogee]\n          }), _jsxs(Text, {\n            style: styles.resultText,\n            children: [\"CNE: \", lastScanResult.cne]\n          }), _jsxs(Text, {\n            style: styles.resultText,\n            children: [\"Heure: \", lastScanResult.timestamp]\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f9fafb'\n  },\n  header: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    paddingTop: 40,\n    paddingBottom: 8,\n    backgroundColor: '#ffffff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#EF4444',\n    textAlign: 'center'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n    marginTop: 4\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 20\n  },\n  scanContainer: {\n    alignItems: 'center',\n    marginTop: 20\n  },\n  scannerContainer: {\n    width: 300,\n    height: 300,\n    overflow: 'hidden',\n    borderRadius: 20,\n    position: 'relative'\n  },\n  scanner: _objectSpread({}, StyleSheet.absoluteFillObject),\n  scanOverlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  scanFrame: {\n    width: 250,\n    height: 250,\n    borderWidth: 2,\n    borderColor: '#7C3AED',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)'\n  },\n  scanButton: {\n    backgroundColor: '#7C3AED',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 25,\n    marginTop: 20,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonIcon: {\n    marginRight: 8\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FEE2E2',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 20\n  },\n  errorText: {\n    color: '#EF4444',\n    marginLeft: 8,\n    flex: 1\n  },\n  resultContainer: {\n    backgroundColor: '#F3F4F6',\n    padding: 16,\n    borderRadius: 12,\n    marginTop: 20,\n    width: '100%'\n  },\n  resultTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1A237E',\n    marginBottom: 8\n  },\n  resultText: {\n    fontSize: 16,\n    color: '#374151',\n    marginBottom: 4\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","SafeAreaView","ScrollView","MaterialIcons","BarCodeScanner","attendanceService","useRoute","jsx","_jsx","jsxs","_jsxs","ScanScreen","route","_ref","params","_ref$roomId","roomId","_ref$roomName","roomName","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","isScanning","setIsScanning","_useState5","_useState6","lastScanResult","setLastScanResult","_useState7","_useState8","scanError","setScanError","style","styles","container","children","header","title","subtitle","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","handleBarCodeScanned","_ref4","_ref3","data","studentData","JSON","parse","nom","prenom","codeApogee","cne","now","Date","record","_objectSpread","timestamp","toLocaleString","console","log","exam_room_id","response","markAttendanceByCode","apiError","_apiError$response","_apiError$response2","_apiError$response3","error","message","headers","err","_x","apply","arguments","errorText","contentContainerStyle","scrollContent","scanContainer","scannerContainer","onBarCodeScanned","scanner","scanOverlay","scanFrame","name","size","color","scanButton","onPress","buttonContent","buttonIcon","buttonText","errorContainer","resultContainer","resultTitle","resultText","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","paddingTop","paddingBottom","borderBottomWidth","borderBottomColor","fontSize","fontWeight","textAlign","marginTop","flexGrow","width","height","overflow","borderRadius","position","absoluteFillObject","borderWidth","borderColor","paddingVertical","paddingHorizontal","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginRight","marginLeft","marginBottom"],"sources":["C:/Users/hp/Desktop/attendease-main/src/screens/ScanScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  ActivityIndicator,\n} from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { attendanceService } from '../lib/api';\nimport { useRoute } from '@react-navigation/native';\n\n// Define the structure for an attendance record\ninterface AttendanceRecord {\n  nom: string;\n  prenom: string;\n  codeApogee: string;\n  cne: string;\n  timestamp: string;\n  status: 'présent';\n}\n\ninterface RouteParams {\n  roomId: string;\n  roomName: string;\n}\n\nexport default function ScanScreen() {\n  const route = useRoute();\n  const { roomId = '', roomName = 'Sélectionner une salle' } = route.params as RouteParams || {};\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [lastScanResult, setLastScanResult] = useState<AttendanceRecord | null>(null);\n  const [scanError, setScanError] = useState<string | null>(null);\n\n  // Si aucune salle n'est sélectionnée, afficher un message\n  if (!roomId) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Scanner le Code QR</Text>\n          <Text style={styles.subtitle}>Veuillez sélectionner une salle</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  const handleBarCodeScanned = async ({ data }: { data: string }) => {\n    if (!isScanning) return;\n\n    setIsScanning(false);\n    setLastScanResult(null);\n    setScanError(null);\n\n    try {\n      // Parse the QR code data\n      const studentData = JSON.parse(data);\n\n      // Validate the required fields\n      if (!studentData.nom || !studentData.prenom || !studentData.codeApogee || !studentData.cne) {\n        setScanError(\"Code QR invalide: données incomplètes\");\n        return;\n      }\n\n      const now = new Date();\n      const record: AttendanceRecord = {\n        ...studentData,\n        timestamp: now.toLocaleString(),\n        status: 'présent',\n      };\n\n      try {\n        // Try to mark attendance in API with room ID\n        console.log('Envoi des données à l\\'API:', { ...studentData, exam_room_id: roomId });\n        const response = await attendanceService.markAttendanceByCode({\n          ...studentData,\n          exam_room_id: roomId\n        });\n        console.log('Réponse de l\\'API:', response.data);\n        \n        // If API call successful, update the UI\n        setLastScanResult(record);\n      } catch (apiError: any) {\n        console.error('Erreur API détaillée:', {\n          message: apiError.message,\n          response: apiError.response?.data,\n          status: apiError.response?.status,\n          headers: apiError.response?.headers\n        });\n        setScanError(\"Erreur lors de l'enregistrement de la présence.\");\n      }\n    } catch (err) {\n      setScanError(\"Code QR invalide: format incorrect\");\n    }\n  };\n\n  if (hasPermission === null) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.title}>Demande d'accès à la caméra...</Text>\n      </SafeAreaView>\n    );\n  }\n\n  if (hasPermission === false) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.title}>Pas d'accès à la caméra</Text>\n        <Text style={styles.errorText}>\n          L'application a besoin d'accéder à la caméra pour scanner les codes QR.\n        </Text>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Scanner le Code QR</Text>\n          <Text style={styles.subtitle}>{roomName}</Text>\n        </View>\n\n        <View style={styles.scanContainer}>\n          {isScanning ? (\n            <View style={styles.scannerContainer}>\n              <BarCodeScanner\n                onBarCodeScanned={handleBarCodeScanned}\n                style={styles.scanner}\n              />\n              <View style={styles.scanOverlay}>\n                <View style={styles.scanFrame} />\n              </View>\n            </View>\n          ) : (\n            <View style={styles.scanFrame}>\n              <MaterialIcons name=\"qr-code-scanner\" size={48} color=\"#6B7280\" />\n            </View>\n          )}\n\n          <TouchableOpacity\n            style={styles.scanButton}\n            onPress={() => setIsScanning(!isScanning)}\n          >\n            <View style={styles.buttonContent}>\n              <MaterialIcons \n                name={isScanning ? \"close\" : \"qr-code-scanner\"} \n                size={24} \n                color=\"#ffffff\" \n                style={styles.buttonIcon} \n              />\n              <Text style={styles.buttonText}>\n                {isScanning ? \"Arrêter le scan\" : \"Commencer le scan\"}\n              </Text>\n            </View>\n          </TouchableOpacity>\n\n          {scanError && (\n            <View style={styles.errorContainer}>\n              <MaterialIcons name=\"error\" size={24} color=\"#EF4444\" />\n              <Text style={styles.errorText}>{scanError}</Text>\n            </View>\n          )}\n\n          {lastScanResult && (\n            <View style={styles.resultContainer}>\n              <Text style={styles.resultTitle}>Présence enregistrée</Text>\n              <Text style={styles.resultText}>\n                {lastScanResult.prenom} {lastScanResult.nom}\n              </Text>\n              <Text style={styles.resultText}>\n                Code Apogée: {lastScanResult.codeApogee}\n              </Text>\n              <Text style={styles.resultText}>\n                CNE: {lastScanResult.cne}\n              </Text>\n              <Text style={styles.resultText}>\n                Heure: {lastScanResult.timestamp}\n              </Text>\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f9fafb',\n  },\n  header: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    paddingTop: 40,\n    paddingBottom: 8,\n    backgroundColor: '#ffffff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#EF4444',\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n    marginTop: 4,\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 20,\n  },\n  scanContainer: {\n    alignItems: 'center',\n    marginTop: 20,\n  },\n  scannerContainer: {\n    width: 300,\n    height: 300,\n    overflow: 'hidden',\n    borderRadius: 20,\n    position: 'relative',\n  },\n  scanner: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  scanOverlay: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scanFrame: {\n    width: 250,\n    height: 250,\n    borderWidth: 2,\n    borderColor: '#7C3AED',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  },\n  scanButton: {\n    backgroundColor: '#7C3AED',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 25,\n    marginTop: 20,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  buttonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonIcon: {\n    marginRight: 8,\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FEE2E2',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 20,\n  },\n  errorText: {\n    color: '#EF4444',\n    marginLeft: 8,\n    flex: 1,\n  },\n  resultContainer: {\n    backgroundColor: '#F3F4F6',\n    padding: 16,\n    borderRadius: 12,\n    marginTop: 20,\n    width: '100%',\n  },\n  resultTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1A237E',\n    marginBottom: 8,\n  },\n  resultText: {\n    fontSize: 16,\n    color: '#374151',\n    marginBottom: 4,\n  },\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}