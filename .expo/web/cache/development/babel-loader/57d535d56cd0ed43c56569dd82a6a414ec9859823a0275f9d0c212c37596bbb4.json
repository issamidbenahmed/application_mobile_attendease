{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport SignInScreen from \"./src/screens/SignInScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport ScanScreen from \"./src/screens/ScanScreen\";\nimport ListScreen from \"./src/screens/ListScreen\";\nimport RoomSelectionScreen from \"./src/screens/RoomSelectionScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar queryClient = new QueryClient();\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(QueryClientProvider, {\n    client: queryClient,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"SignIn\",\n          screenOptions: {\n            headerStyle: {\n              backgroundColor: '#7C3AED'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n              fontWeight: 'bold'\n            }\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"SignIn\",\n            component: SignInScreen,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"SignUp\",\n            component: SignUpScreen,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"RoomSelection\",\n            component: RoomSelectionScreen,\n            options: {\n              title: 'Sélection de la salle'\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Scan\",\n            component: ScanScreen,\n            options: function options(_ref) {\n              var route = _ref.route;\n              return {\n                title: `Scanner - ${route.params.roomName}`\n              };\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"List\",\n            component: ListScreen,\n            options: function options(_ref2) {\n              var route = _ref2.route;\n              return {\n                title: `Liste des présences - Salle ${route.params.examRoomId}`,\n                headerBackTitle: 'Retour'\n              };\n            }\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","SafeAreaProvider","QueryClient","QueryClientProvider","SignInScreen","SignUpScreen","ScanScreen","ListScreen","RoomSelectionScreen","jsx","_jsx","jsxs","_jsxs","queryClient","Stack","App","client","children","Navigator","initialRouteName","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","headerShown","title","_ref","route","params","roomName","_ref2","examRoomId","headerBackTitle"],"sources":["C:/Users/hp/Desktop/attendease-main/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\n// Screens\nimport SignInScreen from './src/screens/SignInScreen';\nimport SignUpScreen from './src/screens/SignUpScreen';\nimport ScanScreen from './src/screens/ScanScreen';\nimport ListScreen from './src/screens/ListScreen';\nimport RoomSelectionScreen from './src/screens/RoomSelectionScreen';\n\n// Initialisation du client de requête\nconst queryClient = new QueryClient();\n\n// Types pour les navigateurs\ntype RootStackParamList = {\n  SignIn: undefined;\n  SignUp: undefined;\n  RoomSelection: undefined;\n  Scan: { roomId: string; roomName: string };\n  List: { examRoomId: string };\n};\n\n// Navigateur\nconst Stack = createStackNavigator<RootStackParamList>();\n\n// Composant principal de l'application\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <Stack.Navigator\n            initialRouteName=\"SignIn\"\n            screenOptions={{\n              headerStyle: {\n                backgroundColor: '#7C3AED',\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold',\n              },\n            }}\n          >\n            <Stack.Screen \n              name=\"SignIn\" \n              component={SignInScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen \n              name=\"SignUp\" \n              component={SignUpScreen}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen \n              name=\"RoomSelection\" \n              component={RoomSelectionScreen}\n              options={{ title: 'Sélection de la salle' }}\n            />\n            <Stack.Screen \n              name=\"Scan\" \n              component={ScanScreen}\n              options={({ route }) => ({ \n                title: `Scanner - ${route.params.roomName}` \n              })}\n            />\n            <Stack.Screen \n              name=\"List\" \n              component={ListScreen}\n              options={({ route }) => ({ \n                title: `Liste des présences - Salle ${route.params.examRoomId}`,\n                headerBackTitle: 'Retour'\n              })}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AAGxE,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,mBAAmB;AAA0C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGpE,IAAMC,WAAW,GAAG,IAAIX,WAAW,CAAC,CAAC;AAYrC,IAAMY,KAAK,GAAGd,oBAAoB,CAAqB,CAAC;AAGxD,eAAe,SAASe,GAAGA,CAAA,EAAG;EAC5B,OACEL,IAAA,CAACP,mBAAmB;IAACa,MAAM,EAAEH,WAAY;IAAAI,QAAA,EACvCP,IAAA,CAACT,gBAAgB;MAAAgB,QAAA,EACfP,IAAA,CAACX,mBAAmB;QAAAkB,QAAA,EAClBL,KAAA,CAACE,KAAK,CAACI,SAAS;UACdC,gBAAgB,EAAC,QAAQ;UACzBC,aAAa,EAAE;YACbC,WAAW,EAAE;cACXC,eAAe,EAAE;YACnB,CAAC;YACDC,eAAe,EAAE,MAAM;YACvBC,gBAAgB,EAAE;cAChBC,UAAU,EAAE;YACd;UACF,CAAE;UAAAR,QAAA,GAEFP,IAAA,CAACI,KAAK,CAACY,MAAM;YACXC,IAAI,EAAC,QAAQ;YACbC,SAAS,EAAExB,YAAa;YACxByB,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM;UAAE,CACjC,CAAC,EACFpB,IAAA,CAACI,KAAK,CAACY,MAAM;YACXC,IAAI,EAAC,QAAQ;YACbC,SAAS,EAAEvB,YAAa;YACxBwB,OAAO,EAAE;cAAEC,WAAW,EAAE;YAAM;UAAE,CACjC,CAAC,EACFpB,IAAA,CAACI,KAAK,CAACY,MAAM;YACXC,IAAI,EAAC,eAAe;YACpBC,SAAS,EAAEpB,mBAAoB;YAC/BqB,OAAO,EAAE;cAAEE,KAAK,EAAE;YAAwB;UAAE,CAC7C,CAAC,EACFrB,IAAA,CAACI,KAAK,CAACY,MAAM;YACXC,IAAI,EAAC,MAAM;YACXC,SAAS,EAAEtB,UAAW;YACtBuB,OAAO,EAAE,SAATA,OAAOA,CAAAG,IAAA;cAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;cAAA,OAAQ;gBACvBF,KAAK,EAAE,aAAaE,KAAK,CAACC,MAAM,CAACC,QAAQ;cAC3C,CAAC;YAAA;UAAE,CACJ,CAAC,EACFzB,IAAA,CAACI,KAAK,CAACY,MAAM;YACXC,IAAI,EAAC,MAAM;YACXC,SAAS,EAAErB,UAAW;YACtBsB,OAAO,EAAE,SAATA,OAAOA,CAAAO,KAAA;cAAA,IAAKH,KAAK,GAAAG,KAAA,CAALH,KAAK;cAAA,OAAQ;gBACvBF,KAAK,EAAE,+BAA+BE,KAAK,CAACC,MAAM,CAACG,UAAU,EAAE;gBAC/DC,eAAe,EAAE;cACnB,CAAC;YAAA;UAAE,CACJ,CAAC;QAAA,CACa;MAAC,CACC;IAAC,CACN;EAAC,CACA,CAAC;AAE1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}