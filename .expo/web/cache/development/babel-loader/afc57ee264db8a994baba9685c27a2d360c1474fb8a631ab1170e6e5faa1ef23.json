{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nvar MaterialIcons;\ntry {\n  MaterialIcons = require('@expo/vector-icons').MaterialIcons;\n} catch (error) {\n  MaterialIcons = function MaterialIcons(_ref) {\n    var name = _ref.name,\n      size = _ref.size,\n      color = _ref.color;\n    return _jsx(Text, {\n      style: {\n        fontSize: size,\n        color: color\n      },\n      children: \"\\u25A1\"\n    });\n  };\n  console.warn('Failed to load MaterialIcons:', error);\n}\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SignInScreen from \"./src/screens/SignInScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport ScanScreen from \"./src/screens/ScanScreen\";\nimport ListScreen from \"./src/screens/ListScreen\";\nimport RoomSelectionScreen from \"./src/screens/RoomSelectionScreen\";\nimport ExamSelectionScreen from \"./src/screens/ExamSelectionScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar queryClient = new QueryClient();\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction AppTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#7C3AED',\n      tabBarInactiveTintColor: '#6B7280',\n      headerShown: false,\n      tabBarLabelStyle: styles.tabBarLabel,\n      tabBarStyle: {\n        backgroundColor: '#FFFFFF',\n        borderTopWidth: 1,\n        borderTopColor: '#E5E7EB',\n        height: 60,\n        paddingBottom: 8,\n        paddingTop: 8\n      },\n      tabBarItemStyle: {\n        padding: 4\n      },\n      tabBarShowLabel: true\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Exams\",\n      component: ExamSelectionScreen,\n      options: {\n        tabBarLabel: 'Examens',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(MaterialIcons, {\n            name: \"assignment\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Rooms\",\n      component: RoomSelectionScreen,\n      initialParams: {\n        examId: undefined,\n        examName: undefined\n      },\n      options: {\n        tabBarLabel: 'Salles',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(MaterialIcons, {\n            name: \"meeting-room\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Scan\",\n      component: ScanScreen,\n      options: {\n        tabBarLabel: 'Scanner',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(MaterialIcons, {\n            name: \"qr-code-scanner\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction ExamStack() {\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"MainTabs\",\n      component: AppTabs\n    })\n  });\n}\nexport default function App() {\n  React.useEffect(function () {\n    var errorHandler = function errorHandler(error) {\n      console.error('Unhandled error:', error);\n    };\n    if (global.ErrorUtils) {\n      global.ErrorUtils.setGlobalHandler(errorHandler);\n    }\n    return function () {};\n  }, []);\n  return _jsx(QueryClientProvider, {\n    client: queryClient,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"SignIn\",\n            component: SignInScreen\n          }), _jsx(Stack.Screen, {\n            name: \"SignUp\",\n            component: SignUpScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Main\",\n            component: ExamStack\n          }), _jsx(Stack.Screen, {\n            name: \"List\",\n            component: ListScreen\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  tabBarLabel: {\n    fontSize: 12,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","SafeAreaProvider","QueryClient","QueryClientProvider","MaterialIcons","require","error","_ref","name","size","color","_jsx","Text","style","fontSize","children","console","warn","StyleSheet","SignInScreen","SignUpScreen","ScanScreen","ListScreen","RoomSelectionScreen","ExamSelectionScreen","jsx","jsxs","_jsxs","queryClient","Stack","Tab","AppTabs","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","tabBarLabelStyle","styles","tabBarLabel","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","height","paddingBottom","paddingTop","tabBarItemStyle","padding","tabBarShowLabel","Screen","component","options","tabBarIcon","_ref2","initialParams","examId","undefined","examName","_ref3","_ref4","ExamStack","App","useEffect","errorHandler","global","ErrorUtils","setGlobalHandler","client","create","fontWeight"],"sources":["C:/Users/hp/Desktop/attendease-main/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// Import MaterialIcons with a try-catch to handle potential errors\nlet MaterialIcons: any;\ntry {\n  MaterialIcons = require('@expo/vector-icons').MaterialIcons;\n} catch (error) {\n  // Fallback if MaterialIcons can't be loaded\n  MaterialIcons = ({ name, size, color }: { name: string; size: number; color: string }) => (\n    <Text style={{ fontSize: size, color }}>□</Text>\n  );\n  console.warn('Failed to load MaterialIcons:', error);\n}\nimport { Text, StyleSheet } from 'react-native';\n\n// Screens\nimport SignInScreen from './src/screens/SignInScreen';\nimport SignUpScreen from './src/screens/SignUpScreen';\nimport ScanScreen from './src/screens/ScanScreen';\nimport ListScreen from './src/screens/ListScreen';\nimport RoomSelectionScreen from './src/screens/RoomSelectionScreen';\nimport ExamSelectionScreen from './src/screens/ExamSelectionScreen';\n\n// Initialisation du client de requête\nconst queryClient = new QueryClient();\n\n// Types pour les navigateurs\ntype RootStackParamList = {\n  SignIn: undefined;\n  SignUp: undefined;\n  Main: undefined;\n  List: { examRoomId: string };\n  ExamSelection: undefined;\n  RoomSelection: { examId: number; examName: string };\n};\n\ntype TabParamList = {\n  Exams: undefined;\n  Rooms: { examId?: number; examName?: string };\n  Scan: { roomId: string; roomName: string; examId?: number; examName?: string };\n};\n\n// Navigateurs\nconst Stack = createStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator<TabParamList>();\n\n// Navigateur principal de l'application\nfunction AppTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#7C3AED',\n        tabBarInactiveTintColor: '#6B7280',\n        headerShown: false,\n        tabBarLabelStyle: styles.tabBarLabel,\n        tabBarStyle: {\n          backgroundColor: '#FFFFFF',\n          borderTopWidth: 1,\n          borderTopColor: '#E5E7EB',\n          height: 60,\n          paddingBottom: 8,\n          paddingTop: 8,\n        },\n        tabBarItemStyle: {\n          padding: 4,\n        },\n        tabBarShowLabel: true,\n      }}\n    >\n      <Tab.Screen \n        name=\"Exams\" \n        component={ExamSelectionScreen} \n        options={{\n          tabBarLabel: 'Examens',\n          tabBarIcon: ({ color, size }: { color: string; size: number }) => (\n            <MaterialIcons name=\"assignment\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"Rooms\" \n        component={RoomSelectionScreen}\n        initialParams={{ examId: undefined, examName: undefined }}\n        options={{\n          tabBarLabel: 'Salles',\n          tabBarIcon: ({ color, size }: { color: string; size: number }) => (\n            <MaterialIcons name=\"meeting-room\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"Scan\" \n        component={ScanScreen} \n        options={{\n          tabBarLabel: 'Scanner',\n          tabBarIcon: ({ color, size }: { color: string; size: number }) => (\n            <MaterialIcons name=\"qr-code-scanner\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\n// Stack pour la navigation entre les écrans d'examen\nfunction ExamStack() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"MainTabs\" component={AppTabs} />\n    </Stack.Navigator>\n  );\n}\n\n// Composant principal de l'application\nexport default function App() {\n  // Add error boundary to catch and report errors\n  React.useEffect(() => {\n    // Handle global errors\n    const errorHandler = (error: any) => {\n      console.error('Unhandled error:', error);\n    };\n\n    // Set up error handler\n    if (global.ErrorUtils) {\n      global.ErrorUtils.setGlobalHandler(errorHandler);\n    }\n\n    return () => {\n      // Clean up if needed\n    };\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name=\"SignIn\" component={SignInScreen} />\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\n            <Stack.Screen name=\"Main\" component={ExamStack} />\n            <Stack.Screen name=\"List\" component={ListScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBarLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n}); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AAExE,IAAIC,aAAkB;AACtB,IAAI;EACFA,aAAa,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACD,aAAa;AAC7D,CAAC,CAAC,OAAOE,KAAK,EAAE;EAEdF,aAAa,GAAG,SAAhBA,aAAaA,CAAAG,IAAA;IAAA,IAAMC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAA,OAClCC,IAAA,CAACC,IAAI;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAEL,IAAI;QAAEC,KAAK,EAALA;MAAM,CAAE;MAAAK,QAAA,EAAC;IAAC,CAAM,CAAC;EAAA,CACjD;EACDC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAEX,KAAK,CAAC;AACtD;AAAC,OAAAM,IAAA;AAAA,OAAAM,UAAA;AAID,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,mBAAmB;AAC1B,OAAOC,mBAAmB;AAA0C,SAAAC,GAAA,IAAAd,IAAA,EAAAe,IAAA,IAAAC,KAAA;AAGpE,IAAMC,WAAW,GAAG,IAAI1B,WAAW,CAAC,CAAC;AAmBrC,IAAM2B,KAAK,GAAG9B,oBAAoB,CAAqB,CAAC;AACxD,IAAM+B,GAAG,GAAG9B,wBAAwB,CAAe,CAAC;AAGpD,SAAS+B,OAAOA,CAAA,EAAG;EACjB,OACEJ,KAAA,CAACG,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE;MACbC,qBAAqB,EAAE,SAAS;MAChCC,uBAAuB,EAAE,SAAS;MAClCC,WAAW,EAAE,KAAK;MAClBC,gBAAgB,EAAEC,MAAM,CAACC,WAAW;MACpCC,WAAW,EAAE;QACXC,eAAe,EAAE,SAAS;QAC1BC,cAAc,EAAE,CAAC;QACjBC,cAAc,EAAE,SAAS;QACzBC,MAAM,EAAE,EAAE;QACVC,aAAa,EAAE,CAAC;QAChBC,UAAU,EAAE;MACd,CAAC;MACDC,eAAe,EAAE;QACfC,OAAO,EAAE;MACX,CAAC;MACDC,eAAe,EAAE;IACnB,CAAE;IAAAlC,QAAA,GAEFJ,IAAA,CAACmB,GAAG,CAACoB,MAAM;MACT1C,IAAI,EAAC,OAAO;MACZ2C,SAAS,EAAE3B,mBAAoB;MAC/B4B,OAAO,EAAE;QACPb,WAAW,EAAE,SAAS;QACtBc,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;UAAA,IAAK5C,KAAK,GAAA4C,KAAA,CAAL5C,KAAK;YAAED,IAAI,GAAA6C,KAAA,CAAJ7C,IAAI;UAAA,OACxBE,IAAA,CAACP,aAAa;YAACI,IAAI,EAAC,YAAY;YAACC,IAAI,EAAEA,IAAK;YAACC,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEjE;IAAE,CACH,CAAC,EACFC,IAAA,CAACmB,GAAG,CAACoB,MAAM;MACT1C,IAAI,EAAC,OAAO;MACZ2C,SAAS,EAAE5B,mBAAoB;MAC/BgC,aAAa,EAAE;QAAEC,MAAM,EAAEC,SAAS;QAAEC,QAAQ,EAAED;MAAU,CAAE;MAC1DL,OAAO,EAAE;QACPb,WAAW,EAAE,QAAQ;QACrBc,UAAU,EAAE,SAAZA,UAAUA,CAAAM,KAAA;UAAA,IAAKjD,KAAK,GAAAiD,KAAA,CAALjD,KAAK;YAAED,IAAI,GAAAkD,KAAA,CAAJlD,IAAI;UAAA,OACxBE,IAAA,CAACP,aAAa;YAACI,IAAI,EAAC,cAAc;YAACC,IAAI,EAAEA,IAAK;YAACC,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEnE;IAAE,CACH,CAAC,EACFC,IAAA,CAACmB,GAAG,CAACoB,MAAM;MACT1C,IAAI,EAAC,MAAM;MACX2C,SAAS,EAAE9B,UAAW;MACtB+B,OAAO,EAAE;QACPb,WAAW,EAAE,SAAS;QACtBc,UAAU,EAAE,SAAZA,UAAUA,CAAAO,KAAA;UAAA,IAAKlD,KAAK,GAAAkD,KAAA,CAALlD,KAAK;YAAED,IAAI,GAAAmD,KAAA,CAAJnD,IAAI;UAAA,OACxBE,IAAA,CAACP,aAAa;YAACI,IAAI,EAAC,iBAAiB;YAACC,IAAI,EAAEA,IAAK;YAACC,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEtE;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB;AAGA,SAASmD,SAASA,CAAA,EAAG;EACnB,OACElD,IAAA,CAACkB,KAAK,CAACG,SAAS;IAACC,aAAa,EAAE;MAAEG,WAAW,EAAE;IAAM,CAAE;IAAArB,QAAA,EACrDJ,IAAA,CAACkB,KAAK,CAACqB,MAAM;MAAC1C,IAAI,EAAC,UAAU;MAAC2C,SAAS,EAAEpB;IAAQ,CAAE;EAAC,CACrC,CAAC;AAEtB;AAGA,eAAe,SAAS+B,GAAGA,CAAA,EAAG;EAE5BjE,KAAK,CAACkE,SAAS,CAAC,YAAM;IAEpB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAI1D,KAAU,EAAK;MACnCU,OAAO,CAACV,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAGD,IAAI2D,MAAM,CAACC,UAAU,EAAE;MACrBD,MAAM,CAACC,UAAU,CAACC,gBAAgB,CAACH,YAAY,CAAC;IAClD;IAEA,OAAO,YAAM,CAEb,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OACErD,IAAA,CAACR,mBAAmB;IAACiE,MAAM,EAAExC,WAAY;IAAAb,QAAA,EACvCJ,IAAA,CAACV,gBAAgB;MAAAc,QAAA,EACfJ,IAAA,CAACb,mBAAmB;QAAAiB,QAAA,EAClBY,KAAA,CAACE,KAAK,CAACG,SAAS;UAACC,aAAa,EAAE;YAAEG,WAAW,EAAE;UAAM,CAAE;UAAArB,QAAA,GACrDJ,IAAA,CAACkB,KAAK,CAACqB,MAAM;YAAC1C,IAAI,EAAC,QAAQ;YAAC2C,SAAS,EAAEhC;UAAa,CAAE,CAAC,EACvDR,IAAA,CAACkB,KAAK,CAACqB,MAAM;YAAC1C,IAAI,EAAC,QAAQ;YAAC2C,SAAS,EAAE/B;UAAa,CAAE,CAAC,EACvDT,IAAA,CAACkB,KAAK,CAACqB,MAAM;YAAC1C,IAAI,EAAC,MAAM;YAAC2C,SAAS,EAAEU;UAAU,CAAE,CAAC,EAClDlD,IAAA,CAACkB,KAAK,CAACqB,MAAM;YAAC1C,IAAI,EAAC,MAAM;YAAC2C,SAAS,EAAE7B;UAAW,CAAE,CAAC;QAAA,CACpC;MAAC,CACC;IAAC,CACN;EAAC,CACA,CAAC;AAE1B;AAEA,IAAMgB,MAAM,GAAGpB,UAAU,CAACmD,MAAM,CAAC;EAC/B9B,WAAW,EAAE;IACXzB,QAAQ,EAAE,EAAE;IACZwD,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}