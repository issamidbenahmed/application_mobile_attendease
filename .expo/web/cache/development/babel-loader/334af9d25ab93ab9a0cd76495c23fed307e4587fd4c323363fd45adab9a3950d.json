{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SignInScreen from \"./src/screens/SignInScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport ScanScreen from \"./src/screens/ScanScreen\";\nimport ListScreen from \"./src/screens/ListScreen\";\nimport RoomSelectionScreen from \"./src/screens/RoomSelectionScreen\";\nimport ExamSelectionScreen from \"./src/screens/ExamSelectionScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar queryClient = new QueryClient();\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction AppTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#7C3AED',\n      tabBarInactiveTintColor: '#6B7280',\n      headerShown: false,\n      tabBarLabelStyle: styles.tabBarLabel,\n      tabBarStyle: {\n        backgroundColor: '#FFFFFF',\n        borderTopWidth: 1,\n        borderTopColor: '#E5E7EB',\n        height: 60,\n        paddingBottom: 8,\n        paddingTop: 8\n      },\n      tabBarItemStyle: {\n        padding: 4\n      },\n      tabBarShowLabel: true\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Exams\",\n      component: ExamSelectionScreen,\n      options: {\n        tabBarLabel: 'Examens',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(MaterialIcons, {\n            name: \"assignment\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Rooms\",\n      component: RoomSelectionScreen,\n      initialParams: {\n        examId: undefined,\n        examName: undefined\n      },\n      options: function options(_ref2) {\n        var route = _ref2.route;\n        return {\n          tabBarLabel: 'Salles',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(MaterialIcons, {\n              name: \"meeting-room\",\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      listeners: function listeners(_ref4) {\n        var navigation = _ref4.navigation,\n          route = _ref4.route;\n        return {\n          tabPress: function tabPress(e) {\n            e.preventDefault();\n            navigation.navigate('Rooms', route.params);\n          }\n        };\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Scan\",\n      component: ScanScreen,\n      options: {\n        tabBarLabel: 'Scanner',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(MaterialIcons, {\n            name: \"qr-code-scanner\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction ExamStack() {\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"MainTabs\",\n      component: AppTabs\n    })\n  });\n}\nexport default function App() {\n  return _jsx(QueryClientProvider, {\n    client: queryClient,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"SignIn\",\n            component: SignInScreen\n          }), _jsx(Stack.Screen, {\n            name: \"SignUp\",\n            component: SignUpScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Main\",\n            component: ExamStack\n          }), _jsx(Stack.Screen, {\n            name: \"List\",\n            component: ListScreen\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  tabBarLabel: {\n    fontSize: 12,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","SafeAreaProvider","QueryClient","QueryClientProvider","MaterialIcons","StyleSheet","SignInScreen","SignUpScreen","ScanScreen","ListScreen","RoomSelectionScreen","ExamSelectionScreen","jsx","_jsx","jsxs","_jsxs","queryClient","Stack","Tab","AppTabs","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","tabBarLabelStyle","styles","tabBarLabel","tabBarStyle","backgroundColor","borderTopWidth","borderTopColor","height","paddingBottom","paddingTop","tabBarItemStyle","padding","tabBarShowLabel","children","Screen","name","component","options","tabBarIcon","_ref","color","size","initialParams","examId","undefined","examName","_ref2","route","_ref3","listeners","_ref4","navigation","tabPress","e","preventDefault","navigate","params","_ref5","ExamStack","App","client","create","fontSize","fontWeight"],"sources":["C:/Users/hp/Desktop/attendease-main/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { BottomTabNavigationProp } from '@react-navigation/bottom-tabs';\nimport type { RouteProp } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Text, StyleSheet } from 'react-native';\n\n// Screens\nimport SignInScreen from './src/screens/SignInScreen';\nimport SignUpScreen from './src/screens/SignUpScreen';\nimport ScanScreen from './src/screens/ScanScreen';\nimport ListScreen from './src/screens/ListScreen';\nimport RoomSelectionScreen from './src/screens/RoomSelectionScreen';\nimport ExamSelectionScreen from './src/screens/ExamSelectionScreen';\n\n// Initialisation du client de requête\nconst queryClient = new QueryClient();\n\n// Types pour les navigateurs\ntype RootStackParamList = {\n  SignIn: undefined;\n  SignUp: undefined;\n  Main: undefined;\n  List: { examRoomId: string };\n  ExamSelection: undefined;\n  RoomSelection: { examId: number; examName: string };\n};\n\ntype TabParamList = {\n  Exams: undefined;\n  Rooms: { examId?: number; examName?: string };\n  Scan: { roomId: string; roomName: string; examId?: number; examName?: string };\n};\n\ntype TabNavigationProps = {\n  navigation: BottomTabNavigationProp<TabParamList>;\n  route: RouteProp<TabParamList, 'Rooms'>;\n};\n\n// Navigateurs\nconst Stack = createStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator<TabParamList>();\n\n// Navigateur principal de l'application\nfunction AppTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#7C3AED',\n        tabBarInactiveTintColor: '#6B7280',\n        headerShown: false,\n        tabBarLabelStyle: styles.tabBarLabel,\n        tabBarStyle: {\n          backgroundColor: '#FFFFFF',\n          borderTopWidth: 1,\n          borderTopColor: '#E5E7EB',\n          height: 60,\n          paddingBottom: 8,\n          paddingTop: 8,\n        },\n        tabBarItemStyle: {\n          padding: 4,\n        },\n        tabBarShowLabel: true,\n      }}\n    >\n      <Tab.Screen \n        name=\"Exams\" \n        component={ExamSelectionScreen} \n        options={{\n          tabBarLabel: 'Examens',\n          tabBarIcon: ({ color, size }: { color: string; size: number }) => (\n            <MaterialIcons name=\"assignment\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"Rooms\" \n        component={RoomSelectionScreen}\n        initialParams={{ examId: undefined, examName: undefined }}\n        options={({ route }: { route: any }) => ({\n          tabBarLabel: 'Salles',\n          tabBarIcon: ({ color, size }: { color: string; size: number }) => (\n            <MaterialIcons name=\"meeting-room\" size={size} color={color} />\n          ),\n        })}\n        listeners={({ navigation, route }: { navigation: any; route: any }) => ({\n          tabPress: (e: any) => {\n            // Empêcher la navigation par défaut pour gérer manuellement\n            e.preventDefault();\n            // Naviguer vers l'écran Rooms avec les paramètres actuels\n            navigation.navigate('Rooms', route.params);\n          },\n        })}\n      />\n      <Tab.Screen \n        name=\"Scan\" \n        component={ScanScreen} \n        options={{\n          tabBarLabel: 'Scanner',\n          tabBarIcon: ({ color, size }: { color: string; size: number }) => (\n            <MaterialIcons name=\"qr-code-scanner\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\n// Stack pour la navigation entre les écrans d'examen\nfunction ExamStack() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"MainTabs\" component={AppTabs} />\n    </Stack.Navigator>\n  );\n}\n\n// Composant principal de l'application\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name=\"SignIn\" component={SignInScreen} />\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\n            <Stack.Screen name=\"Main\" component={ExamStack} />\n            <Stack.Screen name=\"List\" component={ListScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBarLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n}); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAGxE,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AACxE,SAASC,aAAa,QAAQ,oBAAoB;AAAC,OAAAC,UAAA;AAInD,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,mBAAmB;AAC1B,OAAOC,mBAAmB;AAA0C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGpE,IAAMC,WAAW,GAAG,IAAId,WAAW,CAAC,CAAC;AAwBrC,IAAMe,KAAK,GAAGlB,oBAAoB,CAAqB,CAAC;AACxD,IAAMmB,GAAG,GAAGlB,wBAAwB,CAAe,CAAC;AAGpD,SAASmB,OAAOA,CAAA,EAAG;EACjB,OACEJ,KAAA,CAACG,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE;MACbC,qBAAqB,EAAE,SAAS;MAChCC,uBAAuB,EAAE,SAAS;MAClCC,WAAW,EAAE,KAAK;MAClBC,gBAAgB,EAAEC,MAAM,CAACC,WAAW;MACpCC,WAAW,EAAE;QACXC,eAAe,EAAE,SAAS;QAC1BC,cAAc,EAAE,CAAC;QACjBC,cAAc,EAAE,SAAS;QACzBC,MAAM,EAAE,EAAE;QACVC,aAAa,EAAE,CAAC;QAChBC,UAAU,EAAE;MACd,CAAC;MACDC,eAAe,EAAE;QACfC,OAAO,EAAE;MACX,CAAC;MACDC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,GAEFzB,IAAA,CAACK,GAAG,CAACqB,MAAM;MACTC,IAAI,EAAC,OAAO;MACZC,SAAS,EAAE9B,mBAAoB;MAC/B+B,OAAO,EAAE;QACPf,WAAW,EAAE,SAAS;QACtBgB,UAAU,EAAE,SAAZA,UAAUA,CAAAC,IAAA;UAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;UAAA,OACxBjC,IAAA,CAACT,aAAa;YAACoC,IAAI,EAAC,YAAY;YAACM,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEjE;IAAE,CACH,CAAC,EACFhC,IAAA,CAACK,GAAG,CAACqB,MAAM;MACTC,IAAI,EAAC,OAAO;MACZC,SAAS,EAAE/B,mBAAoB;MAC/BqC,aAAa,EAAE;QAAEC,MAAM,EAAEC,SAAS;QAAEC,QAAQ,EAAED;MAAU,CAAE;MAC1DP,OAAO,EAAE,SAATA,OAAOA,CAAAS,KAAA;QAAA,IAAKC,KAAK,GAAAD,KAAA,CAALC,KAAK;QAAA,OAAwB;UACvCzB,WAAW,EAAE,QAAQ;UACrBgB,UAAU,EAAE,SAAZA,UAAUA,CAAAU,KAAA;YAAA,IAAKR,KAAK,GAAAQ,KAAA,CAALR,KAAK;cAAEC,IAAI,GAAAO,KAAA,CAAJP,IAAI;YAAA,OACxBjC,IAAA,CAACT,aAAa;cAACoC,IAAI,EAAC,cAAc;cAACM,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAAA;QAEnE,CAAC;MAAA,CAAE;MACHS,SAAS,EAAE,SAAXA,SAASA,CAAAC,KAAA;QAAA,IAAKC,UAAU,GAAAD,KAAA,CAAVC,UAAU;UAAEJ,KAAK,GAAAG,KAAA,CAALH,KAAK;QAAA,OAAyC;UACtEK,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,CAAM,EAAK;YAEpBA,CAAC,CAACC,cAAc,CAAC,CAAC;YAElBH,UAAU,CAACI,QAAQ,CAAC,OAAO,EAAER,KAAK,CAACS,MAAM,CAAC;UAC5C;QACF,CAAC;MAAA;IAAE,CACJ,CAAC,EACFhD,IAAA,CAACK,GAAG,CAACqB,MAAM;MACTC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEjC,UAAW;MACtBkC,OAAO,EAAE;QACPf,WAAW,EAAE,SAAS;QACtBgB,UAAU,EAAE,SAAZA,UAAUA,CAAAmB,KAAA;UAAA,IAAKjB,KAAK,GAAAiB,KAAA,CAALjB,KAAK;YAAEC,IAAI,GAAAgB,KAAA,CAAJhB,IAAI;UAAA,OACxBjC,IAAA,CAACT,aAAa;YAACoC,IAAI,EAAC,iBAAiB;YAACM,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEtE;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB;AAGA,SAASkB,SAASA,CAAA,EAAG;EACnB,OACElD,IAAA,CAACI,KAAK,CAACG,SAAS;IAACC,aAAa,EAAE;MAAEG,WAAW,EAAE;IAAM,CAAE;IAAAc,QAAA,EACrDzB,IAAA,CAACI,KAAK,CAACsB,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEtB;IAAQ,CAAE;EAAC,CACrC,CAAC;AAEtB;AAGA,eAAe,SAAS6C,GAAGA,CAAA,EAAG;EAC5B,OACEnD,IAAA,CAACV,mBAAmB;IAAC8D,MAAM,EAAEjD,WAAY;IAAAsB,QAAA,EACvCzB,IAAA,CAACZ,gBAAgB;MAAAqC,QAAA,EACfzB,IAAA,CAACf,mBAAmB;QAAAwC,QAAA,EAClBvB,KAAA,CAACE,KAAK,CAACG,SAAS;UAACC,aAAa,EAAE;YAAEG,WAAW,EAAE;UAAM,CAAE;UAAAc,QAAA,GACrDzB,IAAA,CAACI,KAAK,CAACsB,MAAM;YAACC,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAEnC;UAAa,CAAE,CAAC,EACvDO,IAAA,CAACI,KAAK,CAACsB,MAAM;YAACC,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAElC;UAAa,CAAE,CAAC,EACvDM,IAAA,CAACI,KAAK,CAACsB,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEsB;UAAU,CAAE,CAAC,EAClDlD,IAAA,CAACI,KAAK,CAACsB,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEhC;UAAW,CAAE,CAAC;QAAA,CACpC;MAAC,CACC;IAAC,CACN;EAAC,CACA,CAAC;AAE1B;AAEA,IAAMiB,MAAM,GAAGrB,UAAU,CAAC6D,MAAM,CAAC;EAC/BvC,WAAW,EAAE;IACXwC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}