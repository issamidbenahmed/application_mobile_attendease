{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SignInScreen from \"./src/screens/SignInScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport ScanScreen from \"./src/screens/ScanScreen\";\nimport ListScreen from \"./src/screens/ListScreen\";\nimport RoomSelectionScreen from \"./src/screens/RoomSelectionScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar queryClient = new QueryClient();\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction AppTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#7C3AED',\n      tabBarInactiveTintColor: '#6B7280',\n      headerShown: false,\n      tabBarLabelStyle: styles.tabBarLabel\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Rooms\",\n      component: RoomSelectionScreen,\n      options: {\n        tabBarLabel: 'Salles',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color;\n          return _jsx(MaterialIcons, {\n            name: \"meeting-room\",\n            size: 24,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Scan\",\n      component: ScanScreen,\n      options: {\n        tabBarLabel: 'Scanner',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color;\n          return _jsx(MaterialIcons, {\n            name: \"qr-code-scanner\",\n            size: 24,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"List\",\n      component: ListScreen,\n      options: {\n        tabBarLabel: 'Liste',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return _jsx(MaterialIcons, {\n            name: \"list\",\n            size: 24,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(QueryClientProvider, {\n    client: queryClient,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"SignIn\",\n            component: SignInScreen\n          }), _jsx(Stack.Screen, {\n            name: \"SignUp\",\n            component: SignUpScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Main\",\n            component: AppTabs\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  tabBarLabel: {\n    fontSize: 12,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","SafeAreaProvider","QueryClient","QueryClientProvider","MaterialIcons","StyleSheet","SignInScreen","SignUpScreen","ScanScreen","ListScreen","RoomSelectionScreen","jsx","_jsx","jsxs","_jsxs","queryClient","Stack","Tab","AppTabs","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","tabBarLabelStyle","styles","tabBarLabel","children","Screen","name","component","options","tabBarIcon","_ref","color","size","_ref2","_ref3","App","client","create","fontSize","fontWeight"],"sources":["C:/Users/hp/Desktop/attendease-main/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Text, StyleSheet } from 'react-native';\n\n// Screens\nimport SignInScreen from './src/screens/SignInScreen';\nimport SignUpScreen from './src/screens/SignUpScreen';\nimport ScanScreen from './src/screens/ScanScreen';\nimport ListScreen from './src/screens/ListScreen';\nimport RoomSelectionScreen from './src/screens/RoomSelectionScreen';\n\n// Initialisation du client de requÃªte\nconst queryClient = new QueryClient();\n\n// Types pour les navigateurs\ntype RootStackParamList = {\n  SignIn: undefined;\n  SignUp: undefined;\n  Main: undefined;\n};\n\ntype TabParamList = {\n  Rooms: undefined;\n  Scan: { roomId: string; roomName: string };\n  List: undefined;\n};\n\n// Navigateurs\nconst Stack = createStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator<TabParamList>();\n\n// Navigateur principal de l'application\nfunction AppTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#7C3AED',\n        tabBarInactiveTintColor: '#6B7280',\n        headerShown: false,\n        tabBarLabelStyle: styles.tabBarLabel,\n      }}\n    >\n      <Tab.Screen \n        name=\"Rooms\" \n        component={RoomSelectionScreen} \n        options={{\n          tabBarLabel: 'Salles',\n          tabBarIcon: ({ color }: { color: string }) => (\n            <MaterialIcons name=\"meeting-room\" size={24} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"Scan\" \n        component={ScanScreen} \n        options={{\n          tabBarLabel: 'Scanner',\n          tabBarIcon: ({ color }: { color: string }) => (\n            <MaterialIcons name=\"qr-code-scanner\" size={24} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen \n        name=\"List\" \n        component={ListScreen} \n        options={{\n          tabBarLabel: 'Liste',\n          tabBarIcon: ({ color }: { color: string }) => (\n            <MaterialIcons name=\"list\" size={24} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\n// Composant principal de l'application\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: false,\n            }}\n          >\n            <Stack.Screen name=\"SignIn\" component={SignInScreen} />\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\n            <Stack.Screen name=\"Main\" component={AppTabs} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBarLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}