{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from 'expo-sharing';\nimport { attendanceService } from \"../lib/api\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://192.168.1.38:8000/api';\nexport default function ListScreen() {\n  var _route$params2;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    attendanceList = _useState2[0],\n    setAttendanceList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    presentCount = _useState8[0],\n    setPresentCount = _useState8[1];\n  var _useState9 = useState(0),\n    _useState0 = _slicedToArray(_useState9, 2),\n    absentCount = _useState0[0],\n    setAbsentCount = _useState0[1];\n  var route = useRoute();\n  useEffect(function () {\n    var fetchAttendances = function () {\n      var _ref = _asyncToGenerator(function* () {\n        setIsLoading(true);\n        setError(null);\n        try {\n          var _route$params;\n          console.log('1. Début du chargement des données...');\n          var examRoomId = (_route$params = route.params) == null ? void 0 : _route$params.examRoomId;\n          if (!examRoomId) {\n            setError(\"ID de la salle non spécifié\");\n            return;\n          }\n          var response = yield attendanceService.getAllAttendances(examRoomId);\n          console.log('2. Réponse reçue du serveur:', response);\n          var data = response.data;\n          console.log('3. Données reçues:', data);\n          var fetchedList = [];\n          if (data) {\n            if (Array.isArray(data)) {\n              console.log('4a. Données reçues comme tableau direct');\n              fetchedList = data;\n            } else if (data.data && Array.isArray(data.data)) {\n              console.log('4b. Données reçues dans data.data');\n              fetchedList = data.data;\n            } else {\n              console.error('4c. Structure de données invalide:', data);\n              setError(\"Structure de données reçues invalide.\");\n              return;\n            }\n            console.log('5. Liste finale à afficher:', fetchedList);\n            setAttendanceList(fetchedList);\n            var present = fetchedList.filter(function (record) {\n              return record.status === 'present';\n            }).length;\n            var absent = fetchedList.filter(function (record) {\n              return record.status === 'absent';\n            }).length;\n            setPresentCount(present);\n            setAbsentCount(absent);\n          } else {\n            console.log('5b. Aucune donnée reçue');\n            setAttendanceList([]);\n          }\n        } catch (error) {\n          console.error('6. Erreur lors du chargement:', error);\n          setError(\"Impossible de charger les données de présence depuis le serveur.\");\n          if (error.message === 'Network Error') {\n            setError(\"Erreur réseau: Impossible de se connecter au serveur.\");\n          }\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function fetchAttendances() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchAttendances();\n    var intervalId = setInterval(function () {\n      fetchAttendances();\n    }, 15000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.examRoomId]);\n  var exportToCSV = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (attendanceList.length === 0) {\n        Alert.alert('Information', \"Aucune donnée à exporter.\");\n        return;\n      }\n      var headers = [\"Nom\", \"Prenom\", \"Code Apogee\", \"CNE\", \"Status\"];\n      var csvRows = [headers.join(',')].concat(_toConsumableArray(attendanceList.map(function (row) {\n        return [`\"${row.student.nom || ''}\"`, `\"${row.student.prenom || ''}\"`, `\"${row.student.code_apogee || ''}\"`, `\"${row.student.cne || ''}\"`, `\"${row.status}\"`].join(',');\n      })));\n      var csvString = csvRows.join('\\n');\n      try {\n        var fileName = `attendance_${new Date().toISOString().split('T')[0]}.csv`;\n        var tempPath = `${FileSystem.cacheDirectory}${fileName}`;\n        yield FileSystem.writeAsStringAsync(tempPath, csvString, {\n          encoding: FileSystem.EncodingType.UTF8\n        });\n        var isAvailable = yield Sharing.isAvailableAsync();\n        if (isAvailable) {\n          yield Sharing.shareAsync(tempPath, {\n            mimeType: 'text/csv',\n            dialogTitle: 'Enregistrer le fichier CSV',\n            UTI: 'public.comma-separated-values-text'\n          });\n        } else {\n          Alert.alert('Téléchargement', 'Voulez-vous télécharger le fichier CSV ?', [{\n            text: 'Annuler',\n            style: 'cancel'\n          }, {\n            text: 'Télécharger',\n            onPress: function () {\n              var _onPress = _asyncToGenerator(function* () {\n                try {\n                  var downloadPath = `${FileSystem.documentDirectory}Download/${fileName}`;\n                  yield FileSystem.copyAsync({\n                    from: tempPath,\n                    to: downloadPath\n                  });\n                  Alert.alert('Succès', 'Le fichier a été téléchargé dans le dossier Download de l\\'application.');\n                } catch (error) {\n                  Alert.alert('Erreur', 'Impossible de télécharger le fichier.');\n                }\n              });\n              function onPress() {\n                return _onPress.apply(this, arguments);\n              }\n              return onPress;\n            }()\n          }]);\n        }\n        yield FileSystem.deleteAsync(tempPath);\n      } catch (error) {\n        console.error('Error saving CSV file:', error);\n        Alert.alert('Erreur', \"Impossible de télécharger le fichier CSV.\");\n      }\n    });\n    return function exportToCSV() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Liste des pr\\xE9sences\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.exportButton,\n        onPress: exportToCSV,\n        children: [_jsx(MaterialIcons, {\n          name: \"file-download\",\n          size: 24,\n          color: \"#ffffff\",\n          style: styles.buttonIcon\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Exporter\"\n        })]\n      })]\n    }), isLoading ? _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#7C3AED\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Chargement des donn\\xE9es...\"\n      })]\n    }) : error ? _jsxs(View, {\n      style: styles.errorContainer,\n      children: [_jsx(MaterialIcons, {\n        name: \"error-outline\",\n        size: 48,\n        color: \"#EF4444\"\n      }), _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })]\n    }) : _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(Text, {\n        style: styles.statText,\n        children: [\"Pr\\xE9sents: \", presentCount]\n      }), _jsxs(Text, {\n        style: styles.statText,\n        children: [\"Absents: \", absentCount]\n      })]\n    }), _jsx(SectionList, {\n      sections: [{\n        title: 'Liste des étudiants',\n        data: attendanceList\n      }],\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        if (!item) return null;\n        return _jsxs(View, {\n          style: styles.listItem,\n          children: [_jsxs(View, {\n            style: styles.itemInfo,\n            children: [_jsxs(Text, {\n              style: styles.itemName,\n              children: [item.student.prenom, \" \", item.student.nom]\n            }), _jsxs(View, {\n              style: styles.itemDetails,\n              children: [_jsxs(Text, {\n                style: styles.itemDetail,\n                children: [\"Code: \", item.student.code_apogee]\n              }), _jsxs(Text, {\n                style: styles.itemDetail,\n                children: [\"CNE: \", item.student.cne]\n              })]\n            }), item.status === 'present' && item.attended_at && _jsx(Text, {\n              style: styles.itemTimestamp,\n              children: new Date(item.attended_at).toLocaleString()\n            })]\n          }), _jsx(View, {\n            style: styles.itemStatus,\n            children: _jsx(Text, {\n              style: [styles.statusBadge, item.status === 'present' ? styles.statusPresent : styles.statusAbsent],\n              children: item.status.toUpperCase()\n            })\n          })]\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref4) {\n        var title = _ref4.section.title;\n        return _jsx(View, {\n          style: styles.sectionHeader,\n          children: _jsx(Text, {\n            style: styles.sectionHeaderText,\n            children: title\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return item != null && item.id ? `${item.id}-${index}` : `item-${index}`;\n      },\n      contentContainerStyle: styles.listContent,\n      showsVerticalScrollIndicator: false,\n      stickySectionHeadersEnabled: false\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f9fafb'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingTop: 16,\n    paddingBottom: 8,\n    backgroundColor: '#ffffff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#EF4444'\n  },\n  exportButton: {\n    backgroundColor: '#7C3AED',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 8\n  },\n  buttonIcon: {\n    marginRight: 4\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontWeight: '500'\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 8\n  },\n  listContent: {\n    flexGrow: 1,\n    paddingBottom: 16\n  },\n  listItem: {\n    flexDirection: 'row',\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  itemInfo: {\n    flex: 1\n  },\n  itemName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#111827',\n    marginBottom: 4\n  },\n  itemDetails: {\n    flexDirection: 'row',\n    marginBottom: 4\n  },\n  itemDetail: {\n    fontSize: 14,\n    color: '#4B5563',\n    marginRight: 8\n  },\n  itemTimestamp: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginBottom: 4\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6B7280'\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FEE2E2',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8\n  },\n  errorText: {\n    color: '#EF4444',\n    marginLeft: 8,\n    flex: 1\n  },\n  itemStatus: {\n    justifyContent: 'center'\n  },\n  statusBadge: {\n    fontSize: 12,\n    fontWeight: '600',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    textTransform: 'uppercase',\n    overflow: 'hidden'\n  },\n  statusAbsent: {\n    backgroundColor: '#FECACA',\n    color: '#DC2626'\n  },\n  statusPresent: {\n    backgroundColor: '#D1FAE5',\n    color: '#065F46'\n  },\n  emptyList: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 32,\n    paddingVertical: 64\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: '#6B7280',\n    marginTop: 16,\n    fontSize: 14\n  },\n  sectionHeader: {\n    backgroundColor: '#f9fafb',\n    padding: 8,\n    paddingHorizontal: 16\n  },\n  sectionHeaderText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#4B5563'\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    backgroundColor: '#ffffff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb'\n  },\n  statText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#374151'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","SafeAreaView","SectionList","TouchableOpacity","Alert","ActivityIndicator","MaterialIcons","FileSystem","Sharing","attendanceService","useRoute","jsx","_jsx","jsxs","_jsxs","API_URL","ListScreen","_route$params2","_useState","_useState2","_slicedToArray","attendanceList","setAttendanceList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","presentCount","setPresentCount","_useState9","_useState0","absentCount","setAbsentCount","route","fetchAttendances","_ref","_asyncToGenerator","_route$params","console","log","examRoomId","params","response","getAllAttendances","data","fetchedList","Array","isArray","present","filter","record","status","length","absent","message","apply","arguments","intervalId","setInterval","clearInterval","exportToCSV","_ref2","alert","headers","csvRows","join","concat","_toConsumableArray","map","row","student","nom","prenom","code_apogee","cne","csvString","fileName","Date","toISOString","split","tempPath","cacheDirectory","writeAsStringAsync","encoding","EncodingType","UTF8","isAvailable","isAvailableAsync","shareAsync","mimeType","dialogTitle","UTI","text","style","onPress","_onPress","downloadPath","documentDirectory","copyAsync","from","to","deleteAsync","styles","container","children","header","title","exportButton","name","size","color","buttonIcon","buttonText","loadingContainer","loadingText","errorContainer","errorText","statsContainer","statText","sections","renderItem","_ref3","item","listItem","itemInfo","itemName","itemDetails","itemDetail","attended_at","itemTimestamp","toLocaleString","itemStatus","statusBadge","statusPresent","statusAbsent","toUpperCase","renderSectionHeader","_ref4","section","sectionHeader","sectionHeaderText","keyExtractor","index","id","contentContainerStyle","listContent","showsVerticalScrollIndicator","stickySectionHeadersEnabled","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","paddingTop","paddingBottom","borderBottomWidth","borderBottomColor","fontSize","fontWeight","paddingVertical","paddingHorizontal","borderRadius","marginRight","listContainer","flexGrow","marginBottom","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop","marginLeft","textTransform","overflow","emptyList","emptyText","textAlign"],"sources":["C:/Users/hp/Desktop/attendease-main/src/screens/ListScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  SectionList,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Share\r\n} from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as Sharing from 'expo-sharing';\r\nimport { attendanceService } from '../lib/api';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\n// Define the structure for an attendance record\r\ninterface AttendanceRecord {\r\n  id?: number;\r\n  student: {\r\n    nom: string;\r\n    prenom: string;\r\n    code_apogee: string;\r\n    cne: string;\r\n  };\r\n  status: 'present' | 'absent';\r\n  attended_at: string | null;\r\n  exam_room_id: string;\r\n}\r\n\r\n// Assure-toi que cette URL correspond à l'adresse IP locale et au port de ton serveur Laravel\r\nconst API_URL = 'http://192.168.1.38:8000/api'; // <--- Vérifie que cette IP est correcte!\r\n\r\nexport default function ListScreen() {\r\n  const [attendanceList, setAttendanceList] = useState<AttendanceRecord[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // State for statistics\r\n  const [presentCount, setPresentCount] = useState(0);\r\n  const [absentCount, setAbsentCount] = useState(0);\r\n\r\n  const route = useRoute();\r\n\r\n  // Load attendance data from API\r\n  useEffect(() => {\r\n    const fetchAttendances = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        console.log('1. Début du chargement des données...');\r\n        \r\n        // Récupérer l'ID de la salle depuis les paramètres de navigation\r\n        const examRoomId = route.params?.examRoomId;\r\n        if (!examRoomId) {\r\n          setError(\"ID de la salle non spécifié\");\r\n          return;\r\n        }\r\n        \r\n        const response = await attendanceService.getAllAttendances(examRoomId);\r\n        console.log('2. Réponse reçue du serveur:', response);\r\n        \r\n        const data = response.data;\r\n        console.log('3. Données reçues:', data);\r\n        \r\n        let fetchedList: AttendanceRecord[] = [];\r\n        if (data) {\r\n          if (Array.isArray(data)) {\r\n            console.log('4a. Données reçues comme tableau direct');\r\n            fetchedList = data;\r\n          } else if (data.data && Array.isArray(data.data)) {\r\n            console.log('4b. Données reçues dans data.data');\r\n            fetchedList = data.data;\r\n          } else {\r\n            console.error('4c. Structure de données invalide:', data);\r\n            setError(\"Structure de données reçues invalide.\");\r\n            return;\r\n          }\r\n          \r\n          console.log('5. Liste finale à afficher:', fetchedList);\r\n          setAttendanceList(fetchedList);\r\n\r\n          // Calculate statistics\r\n          const present = fetchedList.filter(record => record.status === 'present').length;\r\n          const absent = fetchedList.filter(record => record.status === 'absent').length;\r\n          setPresentCount(present);\r\n          setAbsentCount(absent);\r\n\r\n        } else {\r\n          console.log('5b. Aucune donnée reçue');\r\n          setAttendanceList([]);\r\n        }\r\n      } catch (error: any) {\r\n        console.error('6. Erreur lors du chargement:', error);\r\n        setError(\"Impossible de charger les données de présence depuis le serveur.\");\r\n        if (error.message === 'Network Error') {\r\n          setError(\"Erreur réseau: Impossible de se connecter au serveur.\");\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAttendances();\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchAttendances();  // Rafraîchissement toutes les 15 secondes\r\n    }, 15000);\r\n  \r\n    return () => clearInterval(intervalId);\r\n  }, [route.params?.examRoomId]);\r\n\r\n\r\n  // Export attendance data as CSV\r\n  const exportToCSV = async () => {\r\n    if (attendanceList.length === 0) {\r\n      Alert.alert('Information', \"Aucune donnée à exporter.\");\r\n      return;\r\n    }\r\n\r\n    const headers = [\"Nom\", \"Prenom\", \"Code Apogee\", \"CNE\", \"Status\"];\r\n    const csvRows = [\r\n      headers.join(','),\r\n      ...attendanceList.map(row =>\r\n        [\r\n          `\"${row.student.nom || ''}\"`,\r\n          `\"${row.student.prenom || ''}\"`,\r\n          `\"${row.student.code_apogee || ''}\"`,\r\n          `\"${row.student.cne || ''}\"`,\r\n          `\"${row.status}\"`,\r\n        ].join(',')\r\n      )\r\n    ];\r\n\r\n    const csvString = csvRows.join('\\n');\r\n    \r\n    try {\r\n      // Créer un nom de fichier avec la date actuelle\r\n      const fileName = `attendance_${new Date().toISOString().split('T')[0]}.csv`;\r\n      \r\n      // Chemin temporaire pour créer le fichier\r\n      const tempPath = `${FileSystem.cacheDirectory}${fileName}`;\r\n      \r\n      // Écrire le fichier CSV temporairement\r\n      await FileSystem.writeAsStringAsync(tempPath, csvString, {\r\n        encoding: FileSystem.EncodingType.UTF8\r\n      });\r\n\r\n      // Vérifier si le partage est disponible\r\n      const isAvailable = await Sharing.isAvailableAsync();\r\n      \r\n      if (isAvailable) {\r\n        // Partager le fichier\r\n        await Sharing.shareAsync(tempPath, {\r\n          mimeType: 'text/csv',\r\n          dialogTitle: 'Enregistrer le fichier CSV',\r\n          UTI: 'public.comma-separated-values-text'\r\n        });\r\n      } else {\r\n        // Si le partage n'est pas disponible, proposer de télécharger\r\n        Alert.alert(\r\n          'Téléchargement',\r\n          'Voulez-vous télécharger le fichier CSV ?',\r\n          [\r\n            {\r\n              text: 'Annuler',\r\n              style: 'cancel'\r\n            },\r\n            {\r\n              text: 'Télécharger',\r\n              onPress: async () => {\r\n                try {\r\n                  const downloadPath = `${FileSystem.documentDirectory}Download/${fileName}`;\r\n                  await FileSystem.copyAsync({\r\n                    from: tempPath,\r\n                    to: downloadPath\r\n                  });\r\n                  Alert.alert('Succès', 'Le fichier a été téléchargé dans le dossier Download de l\\'application.');\r\n                } catch (error) {\r\n                  Alert.alert('Erreur', 'Impossible de télécharger le fichier.');\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        );\r\n      }\r\n\r\n      // Supprimer le fichier temporaire\r\n      await FileSystem.deleteAsync(tempPath);\r\n\r\n    } catch (error) {\r\n      console.error('Error saving CSV file:', error);\r\n      Alert.alert('Erreur', \"Impossible de télécharger le fichier CSV.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Liste des présences</Text>\r\n        <TouchableOpacity \r\n          style={styles.exportButton}\r\n          onPress={exportToCSV}\r\n        >\r\n          <MaterialIcons name=\"file-download\" size={24} color=\"#ffffff\" style={styles.buttonIcon} />\r\n          <Text style={styles.buttonText}>Exporter</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {isLoading ? (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#7C3AED\" />\r\n          <Text style={styles.loadingText}>Chargement des données...</Text>\r\n        </View>\r\n      ) : error ? (\r\n        <View style={styles.errorContainer}>\r\n          <MaterialIcons name=\"error-outline\" size={48} color=\"#EF4444\" />\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.statsContainer}>\r\n          <Text style={styles.statText}>Présents: {presentCount}</Text>\r\n          <Text style={styles.statText}>Absents: {absentCount}</Text>\r\n        </View>\r\n      )}\r\n\r\n      <SectionList\r\n        sections={[\r\n          {\r\n            title: 'Liste des étudiants',\r\n            data: attendanceList\r\n          }\r\n        ]}\r\n        renderItem={({ item }: { item: AttendanceRecord }) => {\r\n          if (!item) return null;\r\n          \r\n          return (\r\n            <View style={styles.listItem}>\r\n              <View style={styles.itemInfo}>\r\n                <Text style={styles.itemName}>\r\n                  {item.student.prenom} {item.student.nom}\r\n                </Text>\r\n                <View style={styles.itemDetails}>\r\n                  <Text style={styles.itemDetail}>\r\n                    Code: {item.student.code_apogee}\r\n                  </Text>\r\n                  <Text style={styles.itemDetail}>\r\n                    CNE: {item.student.cne}\r\n                  </Text>\r\n                </View>\r\n                {item.status === 'present' && item.attended_at && (\r\n                  <Text style={styles.itemTimestamp}>\r\n                    {new Date(item.attended_at).toLocaleString()}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n              <View style={styles.itemStatus}>\r\n                <Text style={[\r\n                  styles.statusBadge,\r\n                  item.status === 'present' ? styles.statusPresent : styles.statusAbsent,\r\n                ]}>\r\n                  {item.status.toUpperCase()}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          );\r\n        }}\r\n        renderSectionHeader={({ section: { title } }) => (\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionHeaderText}>{title}</Text>\r\n          </View>\r\n        )}\r\n        keyExtractor={(item: AttendanceRecord, index: number) => \r\n          item?.id ? `${item.id}-${index}` : `item-${index}`\r\n        }\r\n        contentContainerStyle={styles.listContent}\r\n        showsVerticalScrollIndicator={false}\r\n        stickySectionHeadersEnabled={false}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f9fafb',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    paddingTop: 16,\r\n    paddingBottom: 8,\r\n    backgroundColor: '#ffffff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#EF4444',\r\n  },\r\n  exportButton: {\r\n    backgroundColor: '#7C3AED',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 8,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 4,\r\n  },\r\n  buttonText: {\r\n    color: '#ffffff',\r\n    fontWeight: '500',\r\n  },\r\n  listContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 8,\r\n  },\r\n  listContent: {\r\n    flexGrow: 1,\r\n    paddingBottom: 16,\r\n  },\r\n  listItem: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  itemInfo: {\r\n    flex: 1,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#111827',\r\n    marginBottom: 4,\r\n  },\r\n  itemDetails: {\r\n    flexDirection: 'row',\r\n    marginBottom: 4,\r\n  },\r\n  itemDetail: {\r\n    fontSize: 14,\r\n    color: '#4B5563',\r\n    marginRight: 8,\r\n  },\r\n  itemTimestamp: {\r\n    fontSize: 12,\r\n    color: '#6B7280',\r\n    marginBottom: 4,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: 20,\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#6B7280',\r\n  },\r\n  errorContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#FEE2E2',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    marginTop: 8,\r\n  },\r\n  errorText: {\r\n    color: '#EF4444',\r\n    marginLeft: 8,\r\n    flex: 1,\r\n  },\r\n  itemStatus: {\r\n    justifyContent: 'center',\r\n  },\r\n  statusBadge: {\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n    paddingVertical: 4,\r\n    paddingHorizontal: 8,\r\n    borderRadius: 12,\r\n    textTransform: 'uppercase',\r\n    overflow: 'hidden',\r\n  },\r\n  statusAbsent: {\r\n    backgroundColor: '#FECACA',\r\n    color: '#DC2626',\r\n  },\r\n  statusPresent: {\r\n    backgroundColor: '#D1FAE5',\r\n    color: '#065F46',\r\n  },\r\n  emptyList: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 32,\r\n    paddingVertical: 64,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    color: '#6B7280',\r\n    marginTop: 16,\r\n    fontSize: 14,\r\n  },\r\n  sectionHeader: {\r\n    backgroundColor: '#f9fafb',\r\n    padding: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  sectionHeaderText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#4B5563',\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n    backgroundColor: '#ffffff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n  },\r\n  statText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#374151',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}