{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from 'expo-sharing';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_URL = 'http://192.168.1.38:8000/api';\nexport default function ListScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    attendanceList = _useState2[0],\n    setAttendanceList = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    presentCount = _useState8[0],\n    setPresentCount = _useState8[1];\n  var _useState9 = useState(0),\n    _useState0 = _slicedToArray(_useState9, 2),\n    absentCount = _useState0[0],\n    setAbsentCount = _useState0[1];\n  useEffect(function () {\n    var fetchAttendances = function () {\n      var _ref = _asyncToGenerator(function* () {\n        setIsLoading(true);\n        setError(null);\n        try {\n          console.log('1. Début du chargement des données...');\n          console.log('URL de l\\'API:', API_URL);\n          var response = yield fetch(`${API_URL}/attendances`);\n          console.log('2. Réponse reçue du serveur:', {\n            status: response.status,\n            statusText: response.statusText,\n            headers: Object.fromEntries(response.headers.entries())\n          });\n          if (!response.ok) {\n            var errorBody = yield response.text();\n            console.error('3. Erreur HTTP:', {\n              status: response.status,\n              statusText: response.statusText,\n              body: errorBody\n            });\n            setError(`Impossible de charger les données: ${response.status} ${response.statusText}`);\n            return;\n          }\n          var data = yield response.json();\n          console.log('4. Données reçues:', JSON.stringify(data, null, 2));\n          var fetchedList = [];\n          if (data) {\n            if (Array.isArray(data)) {\n              console.log('5a. Données reçues comme tableau direct');\n              fetchedList = data;\n            } else if (data.data && Array.isArray(data.data)) {\n              console.log('5b. Données reçues dans data.data');\n              fetchedList = data.data;\n            } else {\n              console.error('5c. Structure de données invalide:', data);\n              setError(\"Structure de données reçues invalide.\");\n              return;\n            }\n            console.log('6. Liste finale à afficher:', JSON.stringify(fetchedList, null, 2));\n            setAttendanceList(fetchedList);\n            var present = fetchedList.filter(function (record) {\n              return record.status === 'présent' || record.status === 'present';\n            }).length;\n            var absent = fetchedList.filter(function (record) {\n              return record.status === 'absent';\n            }).length;\n            setPresentCount(present);\n            setAbsentCount(absent);\n          } else {\n            console.log('6b. Aucune donnée reçue');\n            setAttendanceList([]);\n          }\n        } catch (error) {\n          console.error('7. Erreur lors du chargement:', {\n            name: error.name,\n            message: error.message,\n            stack: error.stack\n          });\n          setError(\"Impossible de charger les données de présence depuis le serveur.\");\n          if (error instanceof TypeError && error.message === 'Network request failed') {\n            console.error('8. Erreur réseau détaillée');\n            setError(\"Erreur réseau: Impossible de se connecter au serveur.\");\n          }\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function fetchAttendances() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchAttendances();\n    var intervalId = setInterval(function () {\n      fetchAttendances();\n    }, 15000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, []);\n  var exportToCSV = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (attendanceList.length === 0) {\n        Alert.alert('Information', \"Aucune donnée à exporter.\");\n        return;\n      }\n      var headers = [\"Nom\", \"Prenom\", \"Code Apogee\", \"CNE\", \"Status\"];\n      var csvRows = [headers.join(',')].concat(_toConsumableArray(attendanceList.map(function (row) {\n        return [`\"${row.nom}\"`, `\"${row.prenom}\"`, `\"${row.code_apogee}\"`, `\"${row.cne}\"`, `\"${row.status}\"`].join(',');\n      })));\n      var csvString = csvRows.join('\\n');\n      try {\n        var fileName = `attendance_${new Date().toISOString().split('T')[0]}.csv`;\n        var tempPath = `${FileSystem.cacheDirectory}${fileName}`;\n        yield FileSystem.writeAsStringAsync(tempPath, csvString, {\n          encoding: FileSystem.EncodingType.UTF8\n        });\n        var isAvailable = yield Sharing.isAvailableAsync();\n        if (isAvailable) {\n          yield Sharing.shareAsync(tempPath, {\n            mimeType: 'text/csv',\n            dialogTitle: 'Enregistrer le fichier CSV',\n            UTI: 'public.comma-separated-values-text'\n          });\n        } else {\n          Alert.alert('Téléchargement', 'Voulez-vous télécharger le fichier CSV ?', [{\n            text: 'Annuler',\n            style: 'cancel'\n          }, {\n            text: 'Télécharger',\n            onPress: function () {\n              var _onPress = _asyncToGenerator(function* () {\n                try {\n                  var downloadPath = `${FileSystem.documentDirectory}Download/${fileName}`;\n                  yield FileSystem.copyAsync({\n                    from: tempPath,\n                    to: downloadPath\n                  });\n                  Alert.alert('Succès', 'Le fichier a été téléchargé dans le dossier Download de l\\'application.');\n                } catch (error) {\n                  Alert.alert('Erreur', 'Impossible de télécharger le fichier.');\n                }\n              });\n              function onPress() {\n                return _onPress.apply(this, arguments);\n              }\n              return onPress;\n            }()\n          }]);\n        }\n        yield FileSystem.deleteAsync(tempPath);\n      } catch (error) {\n        console.error('Error saving CSV file:', error);\n        Alert.alert('Erreur', \"Impossible de télécharger le fichier CSV.\");\n      }\n    });\n    return function exportToCSV() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Liste des \\xC9tudiants\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.exportButton,\n        onPress: exportToCSV,\n        disabled: isLoading,\n        children: [isLoading ? _jsx(ActivityIndicator, {\n          color: \"#ffffff\",\n          size: \"small\",\n          style: styles.buttonIcon\n        }) : _jsx(MaterialIcons, {\n          name: \"file-download\",\n          size: 20,\n          color: \"#ffffff\",\n          style: styles.buttonIcon\n        }), _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Exporter\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.listContainer,\n      children: [isLoading ? _jsxs(View, {\n        style: styles.loadingOverlay,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#7C3AED\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Chargement des donn\\xE9es...\"\n        })]\n      }) : error ? _jsxs(View, {\n        style: styles.errorContainer,\n        children: [_jsx(MaterialIcons, {\n          name: \"error\",\n          size: 24,\n          color: \"#EF4444\"\n        }), _jsx(Text, {\n          style: styles.errorText,\n          children: error\n        })]\n      }) : _jsxs(View, {\n        style: styles.statsContainer,\n        children: [_jsxs(Text, {\n          style: styles.statText,\n          children: [\"Pr\\xE9sents: \", presentCount]\n        }), _jsxs(Text, {\n          style: styles.statText,\n          children: [\"Absents: \", absentCount]\n        })]\n      }), isLoading ? null : error ? null : attendanceList.length === 0 ? _jsxs(View, {\n        style: styles.emptyList,\n        children: [_jsx(MaterialIcons, {\n          name: \"info-outline\",\n          size: 48,\n          color: \"#6B7280\"\n        }), _jsx(Text, {\n          style: styles.emptyText,\n          children: \"Aucun enregistrement trouv\\xE9.\"\n        })]\n      }) : _jsx(SectionList, {\n        sections: [{\n          title: 'Liste des étudiants',\n          data: attendanceList\n        }],\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          if (!item) return null;\n          return _jsxs(View, {\n            style: styles.listItem,\n            children: [_jsxs(View, {\n              style: styles.itemInfo,\n              children: [_jsxs(Text, {\n                style: styles.itemName,\n                children: [item.prenom ? `${item.prenom} ` : '', item.nom || '']\n              }), _jsxs(View, {\n                style: styles.itemDetails,\n                children: [_jsxs(Text, {\n                  style: styles.itemDetail,\n                  children: [\"Code: \", item.code_apogee || 'N/A']\n                }), _jsxs(Text, {\n                  style: styles.itemDetail,\n                  children: [\"CNE: \", item.cne || 'N/A']\n                })]\n              }), item.status === 'présent' && item.attended_at && _jsx(Text, {\n                style: styles.itemTimestamp,\n                children: new Date(item.attended_at).toLocaleString()\n              }), item.notes && _jsxs(Text, {\n                style: styles.itemDetail,\n                children: [\"Notes: \", item.notes]\n              })]\n            }), _jsx(View, {\n              style: styles.itemStatus,\n              children: _jsx(Text, {\n                style: [styles.statusBadge, item.status === 'présent' || item.status === 'present' ? styles.statusPresent : styles.statusAbsent],\n                children: (item.status || 'N/A').toUpperCase()\n              })\n            })]\n          });\n        },\n        renderSectionHeader: function renderSectionHeader(_ref4) {\n          var title = _ref4.section.title;\n          return _jsx(View, {\n            style: styles.sectionHeader,\n            children: _jsx(Text, {\n              style: styles.sectionHeaderText,\n              children: title\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return item != null && item.code_apogee ? `${item.code_apogee}-${index}` : `item-${index}`;\n        },\n        contentContainerStyle: styles.listContent,\n        showsVerticalScrollIndicator: false,\n        stickySectionHeadersEnabled: false,\n        ListEmptyComponent: function ListEmptyComponent() {\n          return _jsxs(View, {\n            style: styles.emptyList,\n            children: [_jsx(MaterialIcons, {\n              name: \"info-outline\",\n              size: 48,\n              color: \"#6B7280\"\n            }), _jsx(Text, {\n              style: styles.emptyText,\n              children: \"Aucun enregistrement trouv\\xE9.\"\n            })]\n          });\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f9fafb'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingTop: 40,\n    paddingBottom: 8,\n    backgroundColor: '#ffffff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#EF4444'\n  },\n  exportButton: {\n    backgroundColor: '#7C3AED',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 8\n  },\n  buttonIcon: {\n    marginRight: 4\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontWeight: '500'\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 8\n  },\n  listContent: {\n    flexGrow: 1,\n    paddingBottom: 16\n  },\n  listItem: {\n    flexDirection: 'row',\n    backgroundColor: '#ffffff',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 2,\n    elevation: 2\n  },\n  itemInfo: {\n    flex: 1\n  },\n  itemName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#111827',\n    marginBottom: 4\n  },\n  itemDetails: {\n    flexDirection: 'row',\n    marginBottom: 4\n  },\n  itemDetail: {\n    fontSize: 14,\n    color: '#4B5563',\n    marginRight: 8\n  },\n  itemTimestamp: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginBottom: 4\n  },\n  loadingOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 20\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#6B7280'\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FEE2E2',\n    padding: 12,\n    borderRadius: 8,\n    marginTop: 8\n  },\n  errorText: {\n    color: '#EF4444',\n    marginLeft: 8,\n    flex: 1\n  },\n  itemStatus: {\n    justifyContent: 'center'\n  },\n  statusBadge: {\n    fontSize: 12,\n    fontWeight: '600',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 12,\n    textTransform: 'uppercase',\n    overflow: 'hidden'\n  },\n  statusAbsent: {\n    backgroundColor: '#FECACA',\n    color: '#DC2626'\n  },\n  statusPresent: {\n    backgroundColor: '#D1FAE5',\n    color: '#065F46'\n  },\n  emptyList: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 32,\n    paddingVertical: 64\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: '#6B7280',\n    marginTop: 16,\n    fontSize: 14\n  },\n  sectionHeader: {\n    backgroundColor: '#f9fafb',\n    padding: 8,\n    paddingHorizontal: 16\n  },\n  sectionHeaderText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#4B5563'\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    backgroundColor: '#ffffff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e5e7eb'\n  },\n  statText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#374151'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","SafeAreaView","SectionList","TouchableOpacity","Alert","ActivityIndicator","MaterialIcons","FileSystem","Sharing","jsx","_jsx","jsxs","_jsxs","API_URL","ListScreen","_useState","_useState2","_slicedToArray","attendanceList","setAttendanceList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","presentCount","setPresentCount","_useState9","_useState0","absentCount","setAbsentCount","fetchAttendances","_ref","_asyncToGenerator","console","log","response","fetch","status","statusText","headers","Object","fromEntries","entries","ok","errorBody","text","body","data","json","JSON","stringify","fetchedList","Array","isArray","present","filter","record","length","absent","name","message","stack","TypeError","apply","arguments","intervalId","setInterval","clearInterval","exportToCSV","_ref2","alert","csvRows","join","concat","_toConsumableArray","map","row","nom","prenom","code_apogee","cne","csvString","fileName","Date","toISOString","split","tempPath","cacheDirectory","writeAsStringAsync","encoding","EncodingType","UTF8","isAvailable","isAvailableAsync","shareAsync","mimeType","dialogTitle","UTI","style","onPress","_onPress","downloadPath","documentDirectory","copyAsync","from","to","deleteAsync","styles","container","children","header","title","exportButton","disabled","color","size","buttonIcon","buttonText","listContainer","loadingOverlay","loadingText","errorContainer","errorText","statsContainer","statText","emptyList","emptyText","sections","renderItem","_ref3","item","listItem","itemInfo","itemName","itemDetails","itemDetail","attended_at","itemTimestamp","toLocaleString","notes","itemStatus","statusBadge","statusPresent","statusAbsent","toUpperCase","renderSectionHeader","_ref4","section","sectionHeader","sectionHeaderText","keyExtractor","index","contentContainerStyle","listContent","showsVerticalScrollIndicator","stickySectionHeadersEnabled","ListEmptyComponent","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","paddingTop","paddingBottom","borderBottomWidth","borderBottomColor","fontSize","fontWeight","paddingVertical","paddingHorizontal","borderRadius","marginRight","flexGrow","marginBottom","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop","marginLeft","textTransform","overflow","textAlign"],"sources":["C:/Users/hp/Desktop/attendease-main/src/screens/ListScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  SectionList,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Share\r\n} from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as Sharing from 'expo-sharing';\r\n\r\n// Define the structure for an attendance record - matches your database/API response\r\ninterface AttendanceRecord {\r\n  id?: number; // Assuming an ID field exists, might not be needed for display\r\n  nom: string;\r\n  prenom: string;\r\n  code_apogee: string; // Use code_apogee as per your migration\r\n  cne: string;\r\n  status: string; // 'présent', 'absent', etc.\r\n  course?: string | null; // Assuming optional fields\r\n  attended_at: string; // Timestamp from backend\r\n  notes?: string | null; // Assuming optional fields\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\n// Assure-toi que cette URL correspond à l'adresse IP locale et au port de ton serveur Laravel\r\nconst API_URL = 'http://192.168.1.38:8000/api'; // <--- Vérifie que cette IP est correcte!\r\n\r\nexport default function ListScreen() {\r\n  const [attendanceList, setAttendanceList] = useState<AttendanceRecord[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // State for statistics\r\n  const [presentCount, setPresentCount] = useState(0);\r\n  const [absentCount, setAbsentCount] = useState(0);\r\n\r\n  // Load attendance data from API using fetch\r\n  useEffect(() => {\r\n    const fetchAttendances = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        console.log('1. Début du chargement des données...');\r\n        console.log('URL de l\\'API:', API_URL);\r\n        \r\n        const response = await fetch(`${API_URL}/attendances`);\r\n        console.log('2. Réponse reçue du serveur:', {\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          headers: Object.fromEntries(response.headers.entries())\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          const errorBody = await response.text();\r\n          console.error('3. Erreur HTTP:', {\r\n            status: response.status,\r\n            statusText: response.statusText,\r\n            body: errorBody\r\n          });\r\n          setError(`Impossible de charger les données: ${response.status} ${response.statusText}`);\r\n          return;\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('4. Données reçues:', JSON.stringify(data, null, 2));\r\n        \r\n        let fetchedList: AttendanceRecord[] = [];\r\n        if (data) {\r\n          if (Array.isArray(data)) {\r\n            console.log('5a. Données reçues comme tableau direct');\r\n            fetchedList = data;\r\n          } else if (data.data && Array.isArray(data.data)) {\r\n            console.log('5b. Données reçues dans data.data');\r\n            fetchedList = data.data;\r\n          } else {\r\n            console.error('5c. Structure de données invalide:', data);\r\n            setError(\"Structure de données reçues invalide.\");\r\n            return;\r\n          }\r\n          \r\n          console.log('6. Liste finale à afficher:', JSON.stringify(fetchedList, null, 2));\r\n          setAttendanceList(fetchedList);\r\n\r\n          // Calculate statistics\r\n          const present = fetchedList.filter(record => record.status === 'présent' || record.status === 'present').length;\r\n          const absent = fetchedList.filter(record => record.status === 'absent').length;\r\n          setPresentCount(present);\r\n          setAbsentCount(absent);\r\n\r\n        } else {\r\n          console.log('6b. Aucune donnée reçue');\r\n          setAttendanceList([]);\r\n        }\r\n      } catch (error: any) {\r\n        console.error('7. Erreur lors du chargement:', {\r\n          name: error.name,\r\n          message: error.message,\r\n          stack: error.stack\r\n        });\r\n        setError(\"Impossible de charger les données de présence depuis le serveur.\");\r\n        if (error instanceof TypeError && error.message === 'Network request failed') {\r\n          console.error('8. Erreur réseau détaillée');\r\n          setError(\"Erreur réseau: Impossible de se connecter au serveur.\");\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAttendances();\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchAttendances();  // Rafraîchissement toutes les 3 secondes\r\n    }, 15000);\r\n  \r\n    return () => clearInterval(intervalId);\r\n   \r\n\r\n  }, []);\r\n\r\n\r\n  // Export attendance data as CSV\r\n  const exportToCSV = async () => {\r\n    if (attendanceList.length === 0) {\r\n      Alert.alert('Information', \"Aucune donnée à exporter.\");\r\n      return;\r\n    }\r\n\r\n    const headers = [\"Nom\", \"Prenom\", \"Code Apogee\", \"CNE\", \"Status\"];\r\n    const csvRows = [\r\n      headers.join(','),\r\n      ...attendanceList.map(row =>\r\n        [\r\n          `\"${row.nom}\"`,\r\n          `\"${row.prenom}\"`,\r\n          `\"${row.code_apogee}\"`,\r\n          `\"${row.cne}\"`,\r\n          `\"${row.status}\"`,\r\n        ].join(',')\r\n      )\r\n    ];\r\n\r\n    const csvString = csvRows.join('\\n');\r\n    \r\n    try {\r\n      // Créer un nom de fichier avec la date actuelle\r\n      const fileName = `attendance_${new Date().toISOString().split('T')[0]}.csv`;\r\n      \r\n      // Chemin temporaire pour créer le fichier\r\n      const tempPath = `${FileSystem.cacheDirectory}${fileName}`;\r\n      \r\n      // Écrire le fichier CSV temporairement\r\n      await FileSystem.writeAsStringAsync(tempPath, csvString, {\r\n        encoding: FileSystem.EncodingType.UTF8\r\n      });\r\n\r\n      // Vérifier si le partage est disponible\r\n      const isAvailable = await Sharing.isAvailableAsync();\r\n      \r\n      if (isAvailable) {\r\n        // Partager le fichier\r\n        await Sharing.shareAsync(tempPath, {\r\n          mimeType: 'text/csv',\r\n          dialogTitle: 'Enregistrer le fichier CSV',\r\n          UTI: 'public.comma-separated-values-text'\r\n        });\r\n      } else {\r\n        // Si le partage n'est pas disponible, proposer de télécharger\r\n        Alert.alert(\r\n          'Téléchargement',\r\n          'Voulez-vous télécharger le fichier CSV ?',\r\n          [\r\n            {\r\n              text: 'Annuler',\r\n              style: 'cancel'\r\n            },\r\n            {\r\n              text: 'Télécharger',\r\n              onPress: async () => {\r\n                try {\r\n                  const downloadPath = `${FileSystem.documentDirectory}Download/${fileName}`;\r\n                  await FileSystem.copyAsync({\r\n                    from: tempPath,\r\n                    to: downloadPath\r\n                  });\r\n                  Alert.alert('Succès', 'Le fichier a été téléchargé dans le dossier Download de l\\'application.');\r\n                } catch (error) {\r\n                  Alert.alert('Erreur', 'Impossible de télécharger le fichier.');\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        );\r\n      }\r\n\r\n      // Supprimer le fichier temporaire\r\n      await FileSystem.deleteAsync(tempPath);\r\n\r\n    } catch (error) {\r\n      console.error('Error saving CSV file:', error);\r\n      Alert.alert('Erreur', \"Impossible de télécharger le fichier CSV.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Liste des Étudiants</Text>\r\n        <TouchableOpacity \r\n          style={styles.exportButton}\r\n          onPress={exportToCSV}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? (\r\n            <ActivityIndicator color=\"#ffffff\" size=\"small\" style={styles.buttonIcon} />\r\n          ) : (\r\n            <MaterialIcons name=\"file-download\" size={20} color=\"#ffffff\" style={styles.buttonIcon} />\r\n          )}\r\n          <Text style={styles.buttonText}>Exporter</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.listContainer}>\r\n        {isLoading ? (\r\n          <View style={styles.loadingOverlay}>\r\n            <ActivityIndicator size=\"large\" color=\"#7C3AED\" />\r\n            <Text style={styles.loadingText}>Chargement des données...</Text>\r\n          </View>\r\n        ) : error ? (\r\n          <View style={styles.errorContainer}>\r\n            <MaterialIcons name=\"error\" size={24} color=\"#EF4444\" />\r\n            <Text style={styles.errorText}>{error}</Text>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.statsContainer}>\r\n            <Text style={styles.statText}>Présents: {presentCount}</Text>\r\n            <Text style={styles.statText}>Absents: {absentCount}</Text>\r\n          </View>\r\n        )}\r\n\r\n        {isLoading ? null : error ? null : attendanceList.length === 0 ? (\r\n          <View style={styles.emptyList}>\r\n            <MaterialIcons name=\"info-outline\" size={48} color=\"#6B7280\" />\r\n            <Text style={styles.emptyText}>\r\n              Aucun enregistrement trouvé.\r\n            </Text>\r\n          </View>\r\n        ) : (\r\n          <SectionList\r\n            sections={[\r\n              {\r\n                title: 'Liste des étudiants',\r\n                data: attendanceList\r\n              }\r\n            ]}\r\n            renderItem={({ item }: { item: AttendanceRecord }) => {\r\n              if (!item) return null;\r\n              \r\n              return (\r\n                <View style={styles.listItem}>\r\n                  <View style={styles.itemInfo}>\r\n                    <Text style={styles.itemName}>\r\n                      {item.prenom ? `${item.prenom} ` : ''}{item.nom || ''}\r\n                    </Text>\r\n                    <View style={styles.itemDetails}>\r\n                      <Text style={styles.itemDetail}>\r\n                        Code: {item.code_apogee || 'N/A'}\r\n                      </Text>\r\n                      <Text style={styles.itemDetail}>\r\n                        CNE: {item.cne || 'N/A'}\r\n                      </Text>\r\n                    </View>\r\n                    {item.status === 'présent' && item.attended_at && (\r\n                      <Text style={styles.itemTimestamp}>\r\n                        {new Date(item.attended_at).toLocaleString()}\r\n                      </Text>\r\n                    )}\r\n                    {item.notes && (\r\n                      <Text style={styles.itemDetail}>\r\n                        Notes: {item.notes}\r\n                      </Text>\r\n                    )}\r\n                  </View>\r\n                  <View style={styles.itemStatus}>\r\n                    <Text style={[\r\n                      styles.statusBadge,\r\n                      item.status === 'présent' || item.status === 'present' ? styles.statusPresent : styles.statusAbsent,\r\n                    ]}>\r\n                      {(item.status || 'N/A').toUpperCase()}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n              );\r\n            }}\r\n            renderSectionHeader={({ section: { title } }) => (\r\n              <View style={styles.sectionHeader}>\r\n                <Text style={styles.sectionHeaderText}>{title}</Text>\r\n              </View>\r\n            )}\r\n            keyExtractor={(item: AttendanceRecord, index: number) => \r\n              item?.code_apogee ? `${item.code_apogee}-${index}` : `item-${index}`\r\n            }\r\n            contentContainerStyle={styles.listContent}\r\n            showsVerticalScrollIndicator={false}\r\n            stickySectionHeadersEnabled={false}\r\n            ListEmptyComponent={() => (\r\n              <View style={styles.emptyList}>\r\n                <MaterialIcons name=\"info-outline\" size={48} color=\"#6B7280\" />\r\n                <Text style={styles.emptyText}>\r\n                  Aucun enregistrement trouvé.\r\n                </Text>\r\n              </View>\r\n            )}\r\n          />\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f9fafb',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    paddingTop: 40,\r\n    paddingBottom: 8,\r\n    backgroundColor: '#ffffff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#EF4444',\r\n  },\r\n  exportButton: {\r\n    backgroundColor: '#7C3AED',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 8,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 4,\r\n  },\r\n  buttonText: {\r\n    color: '#ffffff',\r\n    fontWeight: '500',\r\n  },\r\n  listContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 8,\r\n  },\r\n  listContent: {\r\n    flexGrow: 1,\r\n    paddingBottom: 16,\r\n  },\r\n  listItem: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  itemInfo: {\r\n    flex: 1,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#111827',\r\n    marginBottom: 4,\r\n  },\r\n  itemDetails: {\r\n    flexDirection: 'row',\r\n    marginBottom: 4,\r\n  },\r\n  itemDetail: {\r\n    fontSize: 14,\r\n    color: '#4B5563',\r\n    marginRight: 8,\r\n  },\r\n  itemTimestamp: {\r\n    fontSize: 12,\r\n    color: '#6B7280',\r\n    marginBottom: 4,\r\n  },\r\n    loadingOverlay: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingVertical: 20,\r\n    },\r\n    loadingText: {\r\n        marginTop: 10,\r\n        fontSize: 16,\r\n        color: '#6B7280',\r\n    },\r\n     errorContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FEE2E2',\r\n        padding: 12,\r\n        borderRadius: 8,\r\n        marginTop: 8,\r\n    },\r\n    errorText: {\r\n        color: '#EF4444',\r\n        marginLeft: 8,\r\n        flex: 1,\r\n    },\r\n  itemStatus: {\r\n    justifyContent: 'center',\r\n  },\r\n  statusBadge: {\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n    paddingVertical: 4,\r\n    paddingHorizontal: 8,\r\n    borderRadius: 12,\r\n    textTransform: 'uppercase',\r\n    overflow: 'hidden',\r\n  },\r\n  statusAbsent: {\r\n    backgroundColor: '#FECACA',\r\n    color: '#DC2626',\r\n  },\r\n  statusPresent: {\r\n    backgroundColor: '#D1FAE5',\r\n    color: '#065F46',\r\n  },\r\n  emptyList: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 32,\r\n    paddingVertical: 64,\r\n  },\r\n  emptyText: {\r\n    textAlign: 'center',\r\n    color: '#6B7280',\r\n    marginTop: 16,\r\n    fontSize: 14,\r\n  },\r\n  sectionHeader: {\r\n    backgroundColor: '#f9fafb',\r\n    padding: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  sectionHeaderText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#4B5563',\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n    backgroundColor: '#ffffff', // Light background for the stats bar\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e5e7eb', // Subtle border\r\n  },\r\n  statText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#374151', // text-foreground\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}